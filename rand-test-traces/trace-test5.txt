0: <LogicalActor(EventID(-1,-1),akka.actor.LocalActorRefProvider$SystemGuardian),LogicalMessage(CreateChild(Props(<function0>;akka.actor.default-dispatcher;NoRouter;Deploy(;Config(SimpleConfigObject({}));NoRouter;NoScopeGiven));log1-Logging$DefaultLogger),EventID(-1,1),Map(akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://BoundedBuffer/deadLetters -> 1),false,false>
1: <LogicalActor(EventID(0,1),akka.event.Logging$DefaultLogger),LogicalMessage(InitializeLogger(akka.event.EventStream@4f51b3e0),EventID(-1,1),Map(akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://BoundedBuffer/deadLetters -> 1),false,false>
2: <LogicalActor(EventID(-1,-1),akka.actor.LocalActorRefProvider$Guardian),LogicalMessage(CreateChild(Props(<function0>;akka.actor.default-dispatcher;NoRouter;Deploy(;Config(SimpleConfigObject({}));NoRouter;NoScopeGiven));buffer),EventID(-1,1),Map(akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://BoundedBuffer/deadLetters -> 1),false,false>
3: <LogicalActor(EventID(-1,-1),akka.actor.LocalActorRefProvider$Guardian),LogicalMessage(CreateChild(Props(<function0>;akka.actor.default-dispatcher;NoRouter;Deploy(;Config(SimpleConfigObject({}));NoRouter;NoScopeGiven));producer),EventID(-1,1),Map(akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://BoundedBuffer/deadLetters -> 1),false,false>
4: <LogicalActor(EventID(-1,-1),akka.actor.LocalActorRefProvider$Guardian),LogicalMessage(CreateChild(Props(<function0>;akka.actor.default-dispatcher;NoRouter;Deploy(;Config(SimpleConfigObject({}));NoRouter;NoScopeGiven));consumer),EventID(-1,1),Map(akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://BoundedBuffer/deadLetters -> 1),false,false>
5: <LogicalActor(EventID(3,1),sut.BoundedBuffer$Producer),LogicalMessage(sut.BoundedBuffer$Produce@51b279c9,EventID(-1,1),Map(akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://BoundedBuffer/deadLetters -> 1),false,false>
6: <LogicalActor(EventID(4,1),sut.BoundedBuffer$Consumer),LogicalMessage(sut.BoundedBuffer$Consume@50de0926,EventID(-1,1),Map(akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://BoundedBuffer/deadLetters -> 1),false,false>
7: <LogicalActor(EventID(3,1),sut.BoundedBuffer$Producer),LogicalMessage(sut.BoundedBuffer$Produce@7f416310,EventID(-1,1),Map(akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://BoundedBuffer/deadLetters -> 1),false,false>
8: <LogicalActor(EventID(2,1),sut.BoundedBuffer$Buffer),LogicalMessage(sut.BoundedBuffer$Get@d001227,EventID(-1,1),Map(akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://BoundedBuffer/deadLetters -> 1),false,false>
9: <LogicalActor(EventID(2,1),sut.BoundedBuffer$Buffer),LogicalMessage(sut.BoundedBuffer$Put@1e2b51cf,EventID(-1,1),Map(akka://BoundedBuffer/user/producer -> 1, akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(3,1),sut.BoundedBuffer$Producer),Map(akka://BoundedBuffer/user/producer -> 1, akka://BoundedBuffer/deadLetters -> 1),false,false>
10: <LogicalActor(EventID(2,1),sut.BoundedBuffer$Buffer),LogicalMessage(sut.BoundedBuffer$Put@46379f99,EventID(-1,1),Map(akka://BoundedBuffer/user/producer -> 1, akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(3,1),sut.BoundedBuffer$Producer),Map(akka://BoundedBuffer/user/producer -> 1, akka://BoundedBuffer/deadLetters -> 1),false,false>
11: <LogicalActor(EventID(-1,-1),EntryPoint),LogicalMessage(sut.BoundedBuffer$Element@5ac31db2,EventID(-1,1),Map(akka://BoundedBuffer/user/buffer -> 1, akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(2,1),sut.BoundedBuffer$Buffer),Map(akka://BoundedBuffer/user/buffer -> 1, akka://BoundedBuffer/deadLetters -> 1),true,false>
12: <LogicalActor(EventID(-1,-1),EntryPoint),LogicalMessage(-1,EventID(-1,1),Map(akka://BoundedBuffer/user/consumer -> 1, akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(4,1),sut.BoundedBuffer$Consumer),Map(akka://BoundedBuffer/user/consumer -> 1, akka://BoundedBuffer/deadLetters -> 1),true,false>
13: <LogicalActor(EventID(4,1),sut.BoundedBuffer$Consumer),LogicalMessage(sut.BoundedBuffer$Consume@140e5a13,EventID(-1,1),Map(akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://BoundedBuffer/deadLetters -> 1),false,false>
14: <LogicalActor(EventID(2,1),sut.BoundedBuffer$Buffer),LogicalMessage(sut.BoundedBuffer$Get@5ca9f78d,EventID(-1,1),Map(akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(-1,-1),EntryPoint),Map(akka://BoundedBuffer/deadLetters -> 1),false,false>
15: <LogicalActor(EventID(-1,-1),EntryPoint),LogicalMessage(sut.BoundedBuffer$Element@6b536376,EventID(-1,1),Map(akka://BoundedBuffer/user/buffer -> 1, akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(2,1),sut.BoundedBuffer$Buffer),Map(akka://BoundedBuffer/user/buffer -> 1, akka://BoundedBuffer/deadLetters -> 1),true,false>
16: <LogicalActor(EventID(-1,-1),EntryPoint),LogicalMessage(0,EventID(-1,1),Map(akka://BoundedBuffer/user/consumer -> 1, akka://BoundedBuffer/deadLetters -> 1)),LogicalActor(EventID(4,1),sut.BoundedBuffer$Consumer),Map(akka://BoundedBuffer/user/consumer -> 1, akka://BoundedBuffer/deadLetters -> 1),true,false>
